stage("build & push") {
    commit_hash = ""
    parallel(cli_dev_container: {
        node("util") {
            buildAndPushContainer("safe-cli", "dev", "x86_64-unknown-linux-gnu")
            commitHash = sh(
                returnStdout: true,
                script: "git rev-parse --short HEAD").trim()
        }
    },
    cli_container: {
        node("util") {
            buildAndPushContainer("safe-cli", "prod", "x86_64-unknown-linux-gnu")
        }
    },
    api_container: {
        node("util") {
            buildAndPushContainer("safe-api", "dev", "x86_64-unknown-linux-gnu")
        }
    },
    ffi_container: {
        node("util") {
            buildAndPushContainer("safe-ffi", "prod", "x86_64-unknown-linux-gnu")
        }
    },
    ffi_dev_container: {
        node("util") {
            buildAndPushContainer("safe-ffi", "dev", "x86_64-unknown-linux-gnu")
        }
    },
    ffi_android_armv7_container: {
        node("util") {
            buildAndPushContainer("safe-ffi", "prod", "armv7-linux-androideabi")
        }
    },
    ffi_android_armv7_dev_container: {
        node("util") {
            buildAndPushContainer("safe-ffi", "dev", "armv7-linux-androideabi")
        }
    },
    ffi_android_x86_64_container: {
        node("util") {
            buildAndPushContainer("safe-ffi", "prod", "x86_64-linux-android")
        }
    },
    ffi_android_x86_64_dev_container: {
        node("util") {
            buildAndPushContainer("safe-ffi", "dev", "x86_64-linux-android")
        }
    })
    build(
        job: "ami_build-safe_api_slave",
        parameters:
        [
            [
                $class: "StringParameterValue",
                name: "SAFE_COMMIT_HASH",
                value: commitHash
            ]
        ],
        wait: false)
}

def buildAndPushContainer(component, type, target) {
    git([url: env.REPO_URL, branch: env.BRANCH])
    withEnv(["SAFE_CLI_CONTAINER_COMPONENT=${component}",
             "SAFE_CLI_CONTAINER_TYPE=${type}",
             "SAFE_CLI_CONTAINER_TARGET=${target}"]) {
        sh("make build-container")
        sh("make push-container")
    }
}
